apply plugin: 'com.android.library'
apply plugin: 'com.minyushov.bintray'

android {
    compileSdkVersion androidCompileSdkVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/options'
        main.java.srcDirs += 'src/main/views'
        main.java.srcDirs += 'src/main/utils'
        main.java.srcDirs += 'src/main/gles'
    }

    libraryVariants.all { variant ->
        variant.generateBuildConfigProvider.configure {
            it.enabled = false
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.0'

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    api 'androidx.exifinterface:exifinterface:1.0.0'
    api 'androidx.lifecycle:lifecycle-common:2.1.0-alpha04'
    implementation 'androidx.annotation:annotation:1.0.2'
}

bintrayUpload {
    dryRun = false
    repo = "android"
    groupId = "com.minyushov.android"
    artifactId = "cameraview"
    version = "2.0.0-beta04"
    vcsUrl = "https://github.com/minyushov/CameraView.git"
    license = "MIT"
    docsSettings {
        project.android.libraryVariants.all { variant ->
            if (variant.name == 'release') {
                classpath += files(variant.javaCompileProvider.get().classpath)
            }
        }
        options {
            docTitle "CameraView ${bintrayUpload.version}"
            windowTitle docTitle
            links "https://developer.android.com/reference/"
        }
    }
}